# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2024-06-09T07:10:30+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Icon(BaseModel):
    id: str
    url: str


class FieldModel(BaseModel):
    defaultValue: Optional[str]
    alwaysRequired: bool
    referenceName: str
    name: str
    url: str
    helpText: Optional[str] = None


class FieldInstance(BaseModel):
    defaultValue: Optional[str]
    alwaysRequired: bool
    referenceName: str
    name: str
    url: str
    helpText: Optional[str] = None


class DoneItem(BaseModel):
    to: str
    actions: None


class InProgres(BaseModel):
    to: str
    actions: Optional[List[str]]


class RemovedItem(BaseModel):
    to: str
    actions: None


class ToDoItem(BaseModel):
    to: str
    actions: Optional[List[str]]


class FieldItem(BaseModel):
    to: str
    actions: None


class ApprovedItem(BaseModel):
    to: str
    actions: None


class CommittedItem(BaseModel):
    to: str
    actions: None


class NewItem(BaseModel):
    to: str
    actions: None


class ClosedItem(BaseModel):
    to: str
    actions: Optional[List[str]]


class RequestedItem(BaseModel):
    to: str
    actions: Optional[List[str]]


class AcceptedItem(BaseModel):
    to: str
    actions: Optional[List[str]]


class ActiveItem(BaseModel):
    to: str
    actions: None


class OpenItem(BaseModel):
    to: str
    actions: None


class InactiveItem(BaseModel):
    to: str
    actions: None


class DesignItem(BaseModel):
    to: str
    actions: None


class ReadyItem(BaseModel):
    to: str
    actions: None


class CompletedItem(BaseModel):
    to: str
    actions: None


class InPlanningItem(BaseModel):
    to: str
    actions: None


class Transitions(BaseModel):
    Done: Optional[List[DoneItem]] = None
    In_Progress: Optional[List[InProgres]] = Field(None, alias='In Progress')
    Removed: Optional[List[RemovedItem]] = None
    To_Do: Optional[List[ToDoItem]] = Field(None, alias='To Do')
    field_: List[FieldItem]
    Approved: Optional[List[ApprovedItem]] = None
    Committed: Optional[List[CommittedItem]] = None
    New: Optional[List[NewItem]] = None
    Closed: Optional[List[ClosedItem]] = None
    Requested: Optional[List[RequestedItem]] = None
    Accepted: Optional[List[AcceptedItem]] = None
    Active: Optional[List[ActiveItem]] = None
    Open: Optional[List[OpenItem]] = None
    Inactive: Optional[List[InactiveItem]] = None
    Design: Optional[List[DesignItem]] = None
    Ready: Optional[List[ReadyItem]] = None
    Completed: Optional[List[CompletedItem]] = None
    In_Planning: Optional[List[InPlanningItem]] = Field(None, alias='In Planning')


class State(BaseModel):
    name: str
    color: str
    category: str


class ValueItem(BaseModel):
    name: str
    referenceName: str
    description: str
    color: str
    icon: Icon
    isDisabled: bool
    xmlForm: str
    fields: List[FieldModel]
    fieldInstances: List[FieldInstance]
    transitions: Transitions
    states: List[State]
    url: str


class Model(BaseModel):
    count: int
    value: List[ValueItem]
